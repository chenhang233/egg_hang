{"version":3,"file":"static/js/169.a647eafc.chunk.js","mappings":"wPACA,EAAuB,oB,4FC0HvB,EA/Gc,WACZ,IAAMA,GAAYC,EAAAA,EAAAA,QAAY,MACxBC,GAAWC,EAAAA,EAAAA,KACjB,GAAwCC,EAAAA,EAAAA,UAAS,KAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACQC,GAASC,EAAAA,EAAAA,IACf,SAACC,GAAD,OAAWA,EAAMC,KAAKC,KAAKC,QAA3B,GACAC,EAAAA,IAFMN,KAIFO,GAAgBN,EAAAA,EAAAA,IACpB,SAACC,GAAD,OAAWA,EAAMM,OAAOD,aAAxB,GACAD,EAAAA,KAEFG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQC,SAASC,cAAc,wCAChC,OAALF,QAAK,IAALA,GAAAA,EAAOG,gBACR,GAAE,CAACN,KACJE,EAAAA,EAAAA,YAAU,WAER,GADAZ,EAAgBc,SAASG,KAAKlB,aAAe,KACzCI,EAAM,CACR,IAAMe,EAASC,IAAG,8BAA+B,CAC/CC,WAAY,CAAC,aACbC,MAAO,CACLC,KAAM,UACNnB,KAAAA,KAcJ,OAXAT,EAAU6B,QAAUL,EACpBA,EAAOM,GAAG,WAAW,WAAQ,IAC7BN,EAAOM,GAAG,UAAU,SAACC,GACnBC,QAAQC,IAAIF,EAAM,UACnB,IACDP,EAAOM,GAAG,cAAc,SAACI,GACvBF,QAAQC,IAAIC,EAAK,2BAClB,IACDV,EAAOM,GAAG,WAAW,SAACI,GACpBhC,GAASiC,EAAAA,EAAAA,IAAiBD,EAAIH,KAAKK,SACpC,IACM,WACLZ,EAAOa,OACR,CACF,CACF,GAAE,CAAC5B,EAAMP,IAcV,OACE,iBAAKoC,UAAWC,IAAWC,GAA3B,WACE,gBAAKF,UAAU,YACf,iBAAKA,UAAU,QAAf,WACE,sDACA,mBACA,gBAAKA,UAAU,UAAUG,MAAO,CAAEC,OAAQrC,GAA1C,UACE,SAAC,KAAD,CACEiC,UAAU,eACVK,WAAW,aACXC,WACE5B,GACAA,EAAc6B,KAAI,SAACC,GAAD,MAAU,CAC1BC,OAAQD,EAAIE,UAAY,2BACxBC,OAAQH,EAAIG,OACZC,SAAS,gBAAKZ,UAAU,UAAf,SAA0BQ,EAAII,UACvCC,UACE,SAAC,IAAD,CACEC,MAAOC,IAAOP,EAAIK,UAAUG,OAAO,uBADrC,UAGE,0BAAOD,IAAOP,EAAIK,UAAUI,cAGhCC,KAAMV,EAAIU,KAXM,IAcpBC,WAAY,SAACC,GAAD,OACV,eAAIpB,UAAWC,IAAWmB,EAAKF,MAA/B,UACE,SAAC,IAAD,CACET,OAAQW,EAAKX,OACbE,OAAQS,EAAKT,OACbC,QAASQ,EAAKR,QACdC,SAAUO,EAAKP,YANT,OAYhB,iBAAKb,UAAU,OAAf,WACE,SAACqB,EAAA,EAAD,CACEC,KAAM,EACNC,UAAW,IACXC,MAAOvD,EACPwD,SAAU,SAACC,GAAD,OA9CD,SAACA,GAClBxD,EAAQwD,EAAEC,OAAOH,MAClB,CA4C0BI,CAAWF,EAAlB,KAEZ,SAAC,IAAD,CAAQR,KAAK,UAAUlB,UAAU,aAAa6B,QA1DlC,WAClBnE,EAAU6B,QAAQuC,KAAK,WAAY,CACjChC,QAAS,CACPc,QAAS3C,EACTE,KAAAA,EACA0C,SAAUkB,KAAKC,SAGnB9D,EAAQ,GACT,EAiDO,iCAKJ,gBAAK8B,UAAU,YAGpB,C","sources":["webpack://egg_frontend/./src/pages/Index/pages/Forum/index.module.scss?cbd5","pages/Index/pages/Forum/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Forum_root__dhmGd\"};","import TextArea from 'antd/lib/input/TextArea'\r\nimport { Comment, Tooltip, Button, List } from 'antd'\r\nimport classNames from 'classnames'\r\nimport styles from './index.module.scss'\r\nimport moment from 'moment'\r\nimport io from 'socket.io-client'\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport { useAppDispatch, useAppSelector } from '../../../../redux/hook'\r\nimport { Forum_socket_listData, Forum_socket_online } from '../socketType'\r\nimport { addForumListData } from '../../../../redux/socket'\r\nimport { shallowEqual } from 'react-redux'\r\n\r\nconst Forum = () => {\r\n  const clientRef = useRef<any>(null)\r\n  const dispatch = useAppDispatch()\r\n  const [clientHeight, setClientHeight] = useState(400)\r\n  const [text, setText] = useState('')\r\n  const { uuid } = useAppSelector(\r\n    (state) => state.user.info.userinfo,\r\n    shallowEqual\r\n  )\r\n  const tempForumList = useAppSelector(\r\n    (state) => state.socket.tempForumList,\r\n    shallowEqual\r\n  )\r\n  useEffect(() => {\r\n    const mydom = document.querySelector('.ant-list-items li:nth-last-child(1)')\r\n    mydom?.scrollIntoView()\r\n  }, [tempForumList])\r\n  useEffect(() => {\r\n    setClientHeight(document.body.clientHeight - 350)\r\n    if (uuid) {\r\n      const client = io('http://localhost:7001/forum', {\r\n        transports: ['websocket'],\r\n        query: {\r\n          room: 'tempPnP',\r\n          uuid,\r\n        },\r\n      })\r\n      clientRef.current = client\r\n      client.on('connect', () => {})\r\n      client.on('online', (data: Forum_socket_online) => {\r\n        console.log(data, 'payload')\r\n      })\r\n      client.on('disconnect', (msg: any) => {\r\n        console.log(msg, '退出原因')\r\n      })\r\n      client.on('message', (msg: Forum_socket_listData) => {\r\n        dispatch(addForumListData(msg.data.payload))\r\n      })\r\n      return () => {\r\n        client.close()\r\n      }\r\n    }\r\n  }, [uuid, dispatch])\r\n  const emitMessage = () => {\r\n    clientRef.current.emit('exchange', {\r\n      payload: {\r\n        content: text,\r\n        uuid,\r\n        datetime: Date.now(),\r\n      },\r\n    })\r\n    setText('')\r\n  }\r\n  const textChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    setText(e.target.value)\r\n  }\r\n  return (\r\n    <div className={classNames(styles.root)}>\r\n      <div className=\"online\"></div>\r\n      <div className=\"panel\">\r\n        <h3>消息记录</h3>\r\n        <hr />\r\n        <div className=\"content\" style={{ height: clientHeight }}>\r\n          <List\r\n            className=\"comment-list\"\r\n            itemLayout=\"horizontal\"\r\n            dataSource={\r\n              tempForumList &&\r\n              tempForumList.map((obj) => ({\r\n                author: obj.nickname || '匿名用户',\r\n                avatar: obj.avatar,\r\n                content: <div className=\"comment\">{obj.content}</div>,\r\n                datetime: (\r\n                  <Tooltip\r\n                    title={moment(obj.datetime).format('YYYY-MM-DD HH:mm:ss')}\r\n                  >\r\n                    <span>{moment(obj.datetime).fromNow()}</span>\r\n                  </Tooltip>\r\n                ),\r\n                type: obj.type,\r\n              }))\r\n            }\r\n            renderItem={(item) => (\r\n              <li className={classNames(item.type)}>\r\n                <Comment\r\n                  author={item.author}\r\n                  avatar={item.avatar}\r\n                  content={item.content}\r\n                  datetime={item.datetime}\r\n                />\r\n              </li>\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"emit\">\r\n          <TextArea\r\n            rows={4}\r\n            maxLength={1000}\r\n            value={text}\r\n            onChange={(e) => textChange(e)}\r\n          />\r\n          <Button type=\"primary\" className=\"buttonEmit\" onClick={emitMessage}>\r\n            发送\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"right\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Forum\r\n"],"names":["clientRef","useRef","dispatch","useAppDispatch","useState","clientHeight","setClientHeight","text","setText","uuid","useAppSelector","state","user","info","userinfo","shallowEqual","tempForumList","socket","useEffect","mydom","document","querySelector","scrollIntoView","body","client","io","transports","query","room","current","on","data","console","log","msg","addForumListData","payload","close","className","classNames","styles","style","height","itemLayout","dataSource","map","obj","author","nickname","avatar","content","datetime","title","moment","format","fromNow","type","renderItem","item","TextArea","rows","maxLength","value","onChange","e","target","textChange","onClick","emit","Date","now"],"sourceRoot":""}