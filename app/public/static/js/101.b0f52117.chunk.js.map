{"version":3,"file":"static/js/101.b0f52117.chunk.js","mappings":"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","sources":["webpack://egg_frontend/./src/pages/Index/pages/RoleManage/index.module.scss?107f","pages/Index/pages/RoleManage/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"root\":\"RoleManage_root__xA-WJ\"};","import {\r\n  Button,\r\n  Form,\r\n  FormInstance,\r\n  Input,\r\n  PaginationProps,\r\n  Row,\r\n  Space,\r\n  Table,\r\n} from 'antd'\r\nimport { useEffect, useState } from 'react'\r\nimport { shallowEqual } from 'react-redux'\r\nimport { AddRole, Roles } from '../../../../api/APItype'\r\nimport { useAppDispatch, useAppSelector } from '../../../../redux/hook'\r\nimport { getRolesRead } from '../../../../redux/slice'\r\nimport Model from '../../../../components/Modal'\r\nimport classNames from 'classnames'\r\nimport styles from './index.module.scss'\r\nimport React from 'react'\r\nimport { deleteRole, setAddrole } from '../../../../api/user'\r\nimport { error, success } from '../../../../api'\r\n\r\nconst { Column } = Table\r\nconst columnArr = [\r\n  { title: '角色id', dataIndex: 'uuid' },\r\n  { title: '角色名称', dataIndex: 'roleName' },\r\n  { title: '角色描述', dataIndex: 'roleMark' },\r\n]\r\nconst RoleManage = () => {\r\n  const [type, setType] = useState<'add' | 'delete'>('add')\r\n  const [visible, setVisible] = useState(false)\r\n  const [UUID, setUUID] = useState<number>()\r\n  const [confirmLoading, setConfirmLoading] = useState(false)\r\n  const formRef = React.createRef<FormInstance<AddRole>>()\r\n  const dispatch = useAppDispatch()\r\n  const Roles = useAppSelector((state) => state.user.Roles, shallowEqual)\r\n  useEffect(() => {\r\n    dispatch(getRolesRead())\r\n  }, [dispatch])\r\n  const handleCancel = () => {\r\n    setVisible(false)\r\n    formRef.current?.resetFields()\r\n  }\r\n  const handleOk = async () => {\r\n    if (type === 'add') {\r\n      try {\r\n        const Ref = formRef.current as FormInstance<AddRole>\r\n        await Ref.validateFields()\r\n        const value = Ref.getFieldsValue()\r\n        setConfirmLoading(true)\r\n        const {\r\n          data: { code, message },\r\n        } = await setAddrole(value)\r\n        if (code === 1) return error(message)\r\n        if (code === 0) {\r\n          handleOkAfter('添加成功')\r\n          Ref.resetFields()\r\n        }\r\n      } catch (e) {\r\n        setConfirmLoading(false)\r\n      }\r\n    }\r\n\r\n    if (type === 'delete' && (UUID || UUID === 0)) {\r\n      try {\r\n        setConfirmLoading(true)\r\n        const {\r\n          data: { code, message },\r\n        } = await deleteRole(UUID)\r\n        if (code === 1) return error(message)\r\n        if (code === 0) {\r\n          handleOkAfter('删除成功')\r\n        }\r\n      } catch (e) {\r\n        setConfirmLoading(false)\r\n        setVisible(false)\r\n        error(`ERROR ${JSON.stringify(e)}`)\r\n      }\r\n    }\r\n  }\r\n  const handleOkAfter = (msg: string) => {\r\n    setVisible(false)\r\n    setConfirmLoading(false)\r\n    success(msg)\r\n    dispatch(getRolesRead())\r\n  }\r\n  const deleteRow = async ({ uuid }: Roles) => {\r\n    setType('delete')\r\n    setVisible(true)\r\n    setUUID(uuid)\r\n  }\r\n  const addRole = () => {\r\n    setType('add')\r\n    setVisible(true)\r\n  }\r\n\r\n  const onShowSizeChange: PaginationProps['onShowSizeChange'] = (\r\n    current,\r\n    pageSize\r\n  ) => {\r\n    console.log(current, pageSize)\r\n  }\r\n  return (\r\n    <main className={classNames(styles.root)}>\r\n      <Model\r\n        visible={visible}\r\n        confirmLoading={confirmLoading}\r\n        handleOk={handleOk}\r\n        handleCancel={handleCancel}\r\n        title={type === 'add' ? '添加角色' : '删除角色'}\r\n      >\r\n        {type === 'add' ? (\r\n          <Form\r\n            autoComplete=\"off\"\r\n            ref={formRef}\r\n            labelCol={{ flex: '110px' }}\r\n            labelAlign=\"left\"\r\n            labelWrap\r\n            wrapperCol={{ flex: 1 }}\r\n          >\r\n            <Form.Item\r\n              label=\"角色名称\"\r\n              name=\"roleName\"\r\n              rules={[{ required: true, min: 1, max: 10, message: '1-10个字' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"角色描述\"\r\n              name=\"roleMark\"\r\n              rules={[{ required: false, max: 50, message: '最多50个字' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n          </Form>\r\n        ) : (\r\n          <p>确定删除当前角色吗</p>\r\n        )}\r\n      </Model>\r\n      <Row justify=\"end\">\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"roleAddButton\"\r\n          onClick={() => addRole()}\r\n        >\r\n          添加角色\r\n        </Button>\r\n      </Row>\r\n      <Table\r\n        pagination={{\r\n          total: Roles.length,\r\n          showSizeChanger: true,\r\n          onShowSizeChange,\r\n          pageSizeOptions: [5, 10, 20, 50],\r\n          defaultPageSize: 5,\r\n        }}\r\n        dataSource={Roles.map((obj) => ({ key: obj.uuid, ...obj }))}\r\n        rowKey={(record) => record.uuid}\r\n      >\r\n        {columnArr.map(({ title, dataIndex }) => (\r\n          <Column title={title} dataIndex={dataIndex} key={dataIndex}></Column>\r\n        ))}\r\n        <Column\r\n          title=\"操作\"\r\n          key=\"action\"\r\n          render={(_: any, record: Roles) => (\r\n            <Space size=\"middle\">\r\n              <Button\r\n                type=\"dashed\"\r\n                onClick={() => deleteRow(record)}\r\n                disabled={!record.canDelete}\r\n              >\r\n                删除\r\n              </Button>\r\n            </Space>\r\n          )}\r\n        />\r\n      </Table>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default RoleManage\r\n"],"names":["Column","Table","columnArr","title","dataIndex","useState","type","setType","visible","setVisible","UUID","setUUID","confirmLoading","setConfirmLoading","formRef","React","dispatch","useAppDispatch","Roles","useAppSelector","state","user","shallowEqual","useEffect","getRolesRead","handleOk","Ref","current","validateFields","value","getFieldsValue","setAddrole","data","code","message","error","handleOkAfter","resetFields","deleteRole","JSON","stringify","msg","success","deleteRow","uuid","className","classNames","styles","handleCancel","autoComplete","ref","labelCol","flex","labelAlign","labelWrap","wrapperCol","label","name","rules","required","min","max","justify","onClick","pagination","total","length","showSizeChanger","onShowSizeChange","pageSize","console","log","pageSizeOptions","defaultPageSize","dataSource","map","obj","key","rowKey","record","render","_","size","disabled","canDelete"],"sourceRoot":""}