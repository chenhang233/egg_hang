{"version":3,"file":"static/js/418.7d8380ac.chunk.js","mappings":"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","sources":["pages/Index/pages/Userinfo/index.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Radio,\r\n  Checkbox,\r\n  Upload,\r\n  message,\r\n  Tabs,\r\n  FormInstance,\r\n} from 'antd'\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport { useAppDispatch, useAppSelector } from '../../../../redux/hook'\r\nimport { shallowEqual } from 'react-redux'\r\nimport {\r\n  getUserinfo,\r\n  setAvatar,\r\n  setUploadAvatar,\r\n  setUserinfo,\r\n} from '../../../../redux/slice'\r\nimport { FormUserInfo } from '../../../../api/APItype'\r\nimport { success } from '../../../../api'\r\nconst { TextArea } = Input\r\nconst { TabPane } = Tabs\r\n\r\nconst Userinfo = () => {\r\n  const [componentDisabled, setComponentDisabled] = useState<boolean>(true)\r\n  const [imageUrl, setImageUrl] = useState<string>()\r\n  const [loading, setLoading] = useState(false)\r\n  const fileRef = useRef<HTMLInputElement>(null)\r\n  const formRef = useRef<FormInstance>(null)\r\n  const dispatch = useAppDispatch()\r\n  const {\r\n    username,\r\n    password,\r\n    sex,\r\n    phone,\r\n    introduction,\r\n    avatar,\r\n    nickname,\r\n    uuid,\r\n  } = useAppSelector((state) => state.user.info.userinfo, shallowEqual)\r\n  useEffect(() => {\r\n    setImageUrl(avatar)\r\n    formRef.current?.setFieldsValue({\r\n      username: username,\r\n      password: password,\r\n      sex: sex,\r\n      phone: phone,\r\n      introduction: introduction,\r\n      nickname: nickname,\r\n    })\r\n  }, [avatar, username, password, sex, phone, introduction, nickname])\r\n  const getBase64 = (img: File, callback: (url: string) => void) => {\r\n    const reader = new FileReader()\r\n    reader.addEventListener('load', () => callback(reader.result as string))\r\n    reader.readAsDataURL(img)\r\n  }\r\n  const beforeUpload = (file: File) => {\r\n    const isLt2M = file.size / 1024 / 1024 < 2\r\n    if (!isLt2M) {\r\n      message.error('最大2M的上传图片')\r\n    }\r\n    return isLt2M\r\n  }\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  )\r\n  const handleUpload = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = e.target.files\r\n    if (files?.length && beforeUpload(files[0])) {\r\n      setLoading(true)\r\n      const formData = new FormData()\r\n      formData.append('file', files[0])\r\n      await dispatch(setUploadAvatar(formData))\r\n      getBase64(files[0], (url) => {\r\n        setImageUrl(url)\r\n        dispatch(setAvatar(url))\r\n      })\r\n      setLoading(false)\r\n    }\r\n  }\r\n  const onFinish = async (value: FormUserInfo) => {\r\n    await dispatch(setUserinfo({ ...value, uuid: uuid }))\r\n    await dispatch(getUserinfo())\r\n    success('修改成功')\r\n    setComponentDisabled(true)\r\n  }\r\n  return (\r\n    <div>\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"改信息\" key=\"1\">\r\n          <Checkbox\r\n            checked={!componentDisabled}\r\n            onChange={(e) => setComponentDisabled(!e.target.checked)}\r\n          >\r\n            表单编辑\r\n          </Checkbox>\r\n          <Form\r\n            ref={formRef}\r\n            labelCol={{ span: 4 }}\r\n            wrapperCol={{ span: 14 }}\r\n            layout=\"horizontal\"\r\n            disabled={componentDisabled}\r\n            autoComplete=\"off\"\r\n            initialValues={{\r\n              username: username,\r\n              password: password,\r\n              sex: sex,\r\n              phone: phone,\r\n              introduction: introduction,\r\n              nickname: nickname,\r\n            }}\r\n            onFinish={onFinish}\r\n          >\r\n            <Form.Item\r\n              label=\"用户名\"\r\n              name=\"username\"\r\n              rules={[\r\n                { required: true, message: '请输入用户名!' },\r\n                { min: 2, max: 20, message: '输入2-20个字符' },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Username\" disabled />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"密码\"\r\n              name=\"password\"\r\n              rules={[\r\n                { required: true, message: '请输入密码!' },\r\n                { min: 2, max: 20, message: '输入2-20个字符' },\r\n              ]}\r\n            >\r\n              <Input type=\"password\" placeholder=\"Password\" disabled />\r\n            </Form.Item>\r\n            <Form.Item label=\"性别\" name=\"sex\">\r\n              <Radio.Group>\r\n                <Radio value=\"男\">男</Radio>\r\n                <Radio value=\"女\">女</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"手机号\"\r\n              name=\"phone\"\r\n              rules={[{ max: 11, min: 9, message: '手机号错误' }]}\r\n            >\r\n              <Input type=\"text\" placeholder=\"phone\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label=\"昵称\"\r\n              name=\"nickname\"\r\n              rules={[{ max: 10, message: '昵称最大10个字符' }]}\r\n            >\r\n              <Input type=\"text\" placeholder=\"昵称\" />\r\n            </Form.Item>\r\n            <Form.Item label=\"个人介绍\" name=\"introduction\">\r\n              <TextArea rows={4} maxLength={300} />\r\n            </Form.Item>\r\n            <Form.Item label=\"修改\">\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                提交\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </TabPane>\r\n        <TabPane tab=\"换头像\" key=\"2\">\r\n          <Upload\r\n            name=\"avatar\"\r\n            listType=\"picture-card\"\r\n            className=\"avatar-uploader\"\r\n            showUploadList={false}\r\n            disabled\r\n          >\r\n            {imageUrl ? (\r\n              <img src={imageUrl} alt=\"avatar\" style={{ width: '100%' }} />\r\n            ) : (\r\n              uploadButton\r\n            )}\r\n          </Upload>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => fileRef.current && fileRef.current.click()}\r\n            style={{ marginTop: 16 }}\r\n          >\r\n            上传新头像\r\n          </Button>\r\n          <input\r\n            ref={fileRef}\r\n            type=\"file\"\r\n            name=\"avatar\"\r\n            id=\"\"\r\n            hidden\r\n            onChange={(e) => handleUpload(e)}\r\n          />\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Userinfo\r\n"],"names":["TextArea","Input","TabPane","Tabs","useState","componentDisabled","setComponentDisabled","imageUrl","setImageUrl","loading","setLoading","fileRef","useRef","formRef","dispatch","useAppDispatch","useAppSelector","state","user","info","userinfo","shallowEqual","username","password","sex","phone","introduction","avatar","nickname","uuid","useEffect","current","setFieldsValue","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isLt2M","size","message","uploadButton","style","marginTop","handleUpload","e","files","target","length","formData","FormData","append","setUploadAvatar","url","setAvatar","onFinish","value","setUserinfo","getUserinfo","success","defaultActiveKey","tab","checked","onChange","ref","labelCol","span","wrapperCol","layout","disabled","autoComplete","initialValues","label","name","rules","required","min","max","placeholder","type","rows","maxLength","htmlType","listType","className","showUploadList","src","alt","width","onClick","click","id","hidden"],"sourceRoot":""}